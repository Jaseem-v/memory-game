{"version":3,"sources":["components/SingleCards.js","App.js","index.js"],"names":["SingleCards","card","clickEvent","flipped","disable","className","src","alt","onClick","cardData","matched","App","useState","setCard","turn","setTurn","choiceCard1","setChoiceCard1","choiceCard2","setChoiceCard2","setDisable","shuffleCard","shuffledCards","sort","Math","random","map","id","cardTurn","useEffect","prev","el","reset","setTimeout","every","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGe,SAASA,EAAT,GAA8D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAQ7D,OACI,qBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACI,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,KAC1C,qBAAKF,UAAU,OAAOG,QAVd,WACXJ,GACDF,EAAWD,IAQqCK,IAAI,gBAAgBC,IAAI,UCXpF,IAAME,EAAW,CACf,CAAE,IAAO,mBAAoBC,SAAS,GACtC,CAAE,IAAO,mBAAoBA,SAAS,GACtC,CAAE,IAAO,iBAAkBA,SAAS,GACpC,CAAE,IAAO,mBAAoBA,SAAS,GACtC,CAAE,IAAO,mBAAoBA,SAAS,GACtC,CAAE,IAAO,kBAAmBA,SAAS,IAyGxBC,MArGf,WAEE,MAAwBC,mBAAS,MAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAAwBD,mBAAS,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAsCH,mBAAS,MAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAsCL,mBAAS,MAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAA8BP,oBAAS,GAAvC,mBAAOR,EAAP,KAAgBgB,EAAhB,KAEMC,EAAc,WAElB,IAAMC,EAAgB,UAAIb,EAAaA,GACpCc,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAAzB,GAAI,kCAAUA,GAAV,IAAgB0B,GAAIH,KAAKC,cAEpCZ,EAAQS,GACRP,EAAQ,IAGJa,EAAW,SAAC3B,GAChBe,EAAcG,EAAelB,GAAQgB,EAAehB,IAItD4B,qBAAU,WAEJb,GAAeE,IACjBE,GAAW,GACPJ,EAAYV,MAAQY,EAAYZ,KAElCO,GAAQ,SAACiB,GASP,OARgBA,EAAKJ,KAAI,SAACK,GACxB,OAAIA,EAAGzB,MAAQU,EAAYV,IAClB,2BAAKyB,GAAZ,IAAgBrB,SAAS,IAElBqB,QAObC,KAGAC,YAAW,WAETD,MACC,MAOC/B,GAAQA,EAAKiC,OAAM,SAAAH,GAAE,OAAmB,IAAfA,EAAGrB,YAKlCuB,YAAW,WAETE,MAAM,mBACNH,IACAX,MACC,OAIJ,CAACL,EAAaE,IAEjB,IAAMc,EAAQ,WACZf,EAAe,MACfE,EAAe,MACfJ,GAAQ,SAAAe,GAAI,OAAIA,EAAO,KACvBV,GAAW,IAMb,OACE,sBAAKf,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASa,EAAjB,sBACA,qBAAKhB,UAAU,aAAf,SACGJ,GAAQA,EAAKyB,KAAI,SAACzB,GACjB,OAAO,cAACD,EAAD,CACLC,KAAMA,EAENC,WAAY0B,EACZzB,QAASF,IAASe,GAAeE,IAAgBjB,GAAQA,EAAKS,QAC9DN,QAASA,GAHJH,EAAK0B,SAQf1B,EAAO,sBAAKI,UAAU,QAAf,cAAwB,wCAAWS,EAAX,UAA8B,OCzGpEsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6ccc2bd1.chunk.js","sourcesContent":["import \"./singleCard.scss\";\r\n\r\n\r\nexport default function SingleCards({ card, clickEvent, flipped, disable }) {\r\n\r\n    const handleClick = () => {\r\n        if (!disable) {\r\n            clickEvent(card)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"single__card\">\r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n                <img className=\"front\" src={card.src} alt=\"\" />\r\n                <img className=\"back\" onClick={handleClick} src=\"img/cover.png\" alt=\"\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\nimport './App.css'\nimport SingleCards from './components/SingleCards'\n\nconst cardData = [\n  { \"src\": \"img/helmet-1.png\", matched: false },\n  { \"src\": \"img/potion-1.png\", matched: false },\n  { \"src\": \"img/ring-1.png\", matched: false },\n  { \"src\": \"img/scroll-1.png\", matched: false },\n  { \"src\": \"img/shield-1.png\", matched: false },\n  { \"src\": \"img/sword-1.png\", matched: false }\n]\n\n\nfunction App() {\n\n  const [card, setCard] = useState(null)\n  const [turn, setTurn] = useState(0)\n  const [choiceCard1, setChoiceCard1] = useState(null)\n  const [choiceCard2, setChoiceCard2] = useState(null)\n  const [disable, setDisable] = useState(false)\n\n  const shuffleCard = () => {\n\n    const shuffledCards = [...cardData, ...cardData]\n      .sort(() => Math.random() - 0.5)\n      .map(card => ({ ...card, id: Math.random() }))\n\n    setCard(shuffledCards)\n    setTurn(0)\n  }\n\n  const cardTurn = (card) => {\n    choiceCard1 ? setChoiceCard2(card) : setChoiceCard1(card)\n\n  }\n\n  useEffect(() => {\n\n    if (choiceCard1 && choiceCard2) {\n      setDisable(true)\n      if (choiceCard1.src === choiceCard2.src) {\n\n        setCard((prev) => {\n          let new_cards = prev.map((el) => {\n            if (el.src === choiceCard1.src) {\n              return { ...el, matched: true }\n            } else {\n              return el\n            }\n          })\n\n          return new_cards\n        })\n\n        reset()\n      } else {\n\n        setTimeout(() => {\n\n          reset()\n        }, 1000)\n      }\n\n\n    }\n\n    /// winner\n    let e = card && card.every(el => el.matched === true)\n\n\n    if (e) {\n\n      setTimeout(() => {\n\n        alert(\"Your The Winner\")\n        reset()\n        shuffleCard()\n      }, 2000)\n    }\n\n\n  }, [choiceCard1, choiceCard2])\n\n  const reset = () => {\n    setChoiceCard1(null)\n    setChoiceCard2(null)\n    setTurn(prev => prev + 1)\n    setDisable(false)\n\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCard}>New Game</button>\n      <div className=\"card__grid\">\n        {card && card.map((card) => {\n          return <SingleCards\n            card={card}\n            key={card.id}\n            clickEvent={cardTurn}\n            flipped={card === choiceCard1 || choiceCard2 === card || card.matched}\n            disable={disable}\n          />\n        })}\n\n      </div>\n      {card ? <div className=\"turns\"> <p> Turns {turn} </p></div> : \"\"}\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}